"use strict";(self.webpackChunkblog=self.webpackChunkblog||[]).push([[5279],{6262:(e,t)=>{t.A=(e,t)=>{const a=e.__vccOpts||e;for(const[e,n]of t)a[e]=n;return a}},7791:(e,t,a)=>{a.r(t),a.d(t,{comp:()=>r,data:()=>i});var n=a(641);const l={},r=(0,a(6262).A)(l,[["render",function(e,t){return(0,n.uX)(),(0,n.CE)("div",null,t[0]||(t[0]=[(0,n.Fv)('<h1 id="外部中断与定时器" tabindex="-1"><a class="header-anchor" href="#外部中断与定时器"><span>外部中断与定时器</span></a></h1><h2 id="_1-外部中断" tabindex="-1"><a class="header-anchor" href="#_1-外部中断"><span>1 外部中断</span></a></h2><h3 id="_1-1-什么是中断" tabindex="-1"><a class="header-anchor" href="#_1-1-什么是中断"><span>1.1 什么是中断</span></a></h3><ul><li>在单片机系统中，中断是一种机制。它允许单片机在执行正常程序的过程中，暂停当前的任务，转而去处理其它更为紧急或者有更高优先级的事件。当这个紧急事件处理完毕后，单片机又能够回到原来被中断的地方，继续执行之前的程序，就好像被打断的工作又重新开始一样。</li><li>例如，想象你正在房间里看书（这就相当于单片机在执行主程序），突然电话铃响了（这就是一个中断事件）。你放下书本去接电话（处理中断），接完电话后，你又能回到刚才看书的地方继续阅读（返回主程序）。</li></ul><h3 id="_1-2-外部中断介绍" tabindex="-1"><a class="header-anchor" href="#_1-2-外部中断介绍"><span>1.2 外部中断介绍</span></a></h3><ul><li>外部中断是指由单片机外部设备或信号触发的中断。它提供了一种让单片机能够及时响应外部事件的方式，使单片机可以和外部世界进行有效的交互。</li><li>外部中断是硬件中断的一种，它由微控制器外部的事件引发。微控制器的某些引脚被设计为对特定事件的发生做出响应，例如按钮的按压、传感器的信号改变等。这些指定的引脚通常被称为“外部中断引脚”。</li><li>之前做按键实验时，现有代码靠loop循环持续检测 IO 口来读取 GPIO 口输入。若后续添加大量代码，轮询到按键检测部分耗时久、效率低。比如特定场合下，按键可能 1 天才按一次，持续检测浪费大量时间。为解决该问题，引入外部中断概念，即仅在按键按下产生中断时，才执行相关功能。这大幅节省 CPU 资源，所以中断在实际项目中应用广泛 。</li><li>ESP32S3 的外部中断有上升沿触发、下降沿触发、低电平触发、高电平触发模式。上升沿和下降沿触发如下：</li></ul><h3 id="_1-3-外部中断的作用和优势" tabindex="-1"><a class="header-anchor" href="#_1-3-外部中断的作用和优势"><span>1.3 外部中断的作用和优势</span></a></h3><h3 id="_1-4-使用外部中断流程" tabindex="-1"><a class="header-anchor" href="#_1-4-使用外部中断流程"><span>1.4 使用外部中断流程</span></a></h3><h4 id="_1-4-1配置引脚" tabindex="-1"><a class="header-anchor" href="#_1-4-1配置引脚"><span>1.4.1配置引脚</span></a></h4><h4 id="_1-4-2将引脚绑定中断服务程序并设置触发中断方式" tabindex="-1"><a class="header-anchor" href="#_1-4-2将引脚绑定中断服务程序并设置触发中断方式"><span>1.4.2将引脚绑定中断服务程序并设置触发中断方式</span></a></h4><h4 id="_1-4-3处理中断事件" tabindex="-1"><a class="header-anchor" href="#_1-4-3处理中断事件"><span>1.4.3处理中断事件</span></a></h4><h4 id="_1-4-4示例代码与现象" tabindex="-1"><a class="header-anchor" href="#_1-4-4示例代码与现象"><span>1.4.4示例代码与现象</span></a></h4><h2 id="_2-定时器" tabindex="-1"><a class="header-anchor" href="#_2-定时器"><span>2. 定时器</span></a></h2>',13)]))}]]),i=JSON.parse('{"path":"/posts/2024%E4%BA%8C%E6%9C%9F%E5%9F%B9%E8%AE%AD/1.html","title":"外部中断与定时器","lang":"zh-CN","frontmatter":{"icon":"pen-to-square","date":"2024-12-29T00:00:00.000Z","category":["培训","ESP32"],"tag":["ESP32S3","ESP32","ESP"],"order":1,"description":"外部中断与定时器 1 外部中断 1.1 什么是中断 在单片机系统中，中断是一种机制。它允许单片机在执行正常程序的过程中，暂停当前的任务，转而去处理其它更为紧急或者有更高优先级的事件。当这个紧急事件处理完毕后，单片机又能够回到原来被中断的地方，继续执行之前的程序，就好像被打断的工作又重新开始一样。 例如，想象你正在房间里看书（这就相当于单片机在执行主程序...","head":[["meta",{"property":"og:url","content":"https://mister-hope.github.io/blog/posts/2024%E4%BA%8C%E6%9C%9F%E5%9F%B9%E8%AE%AD/1.html"}],["meta",{"property":"og:site_name","content":"博客"}],["meta",{"property":"og:title","content":"外部中断与定时器"}],["meta",{"property":"og:description","content":"外部中断与定时器 1 外部中断 1.1 什么是中断 在单片机系统中，中断是一种机制。它允许单片机在执行正常程序的过程中，暂停当前的任务，转而去处理其它更为紧急或者有更高优先级的事件。当这个紧急事件处理完毕后，单片机又能够回到原来被中断的地方，继续执行之前的程序，就好像被打断的工作又重新开始一样。 例如，想象你正在房间里看书（这就相当于单片机在执行主程序..."}],["meta",{"property":"og:type","content":"article"}],["meta",{"property":"og:locale","content":"zh-CN"}],["meta",{"property":"og:updated_time","content":"2025-01-16T14:42:25.000Z"}],["meta",{"property":"article:tag","content":"ESP32S3"}],["meta",{"property":"article:tag","content":"ESP32"}],["meta",{"property":"article:tag","content":"ESP"}],["meta",{"property":"article:published_time","content":"2024-12-29T00:00:00.000Z"}],["meta",{"property":"article:modified_time","content":"2025-01-16T14:42:25.000Z"}],["script",{"type":"application/ld+json"},"{\\"@context\\":\\"https://schema.org\\",\\"@type\\":\\"Article\\",\\"headline\\":\\"外部中断与定时器\\",\\"image\\":[\\"\\"],\\"datePublished\\":\\"2024-12-29T00:00:00.000Z\\",\\"dateModified\\":\\"2025-01-16T14:42:25.000Z\\",\\"author\\":[{\\"@type\\":\\"Person\\",\\"name\\":\\"王明照\\",\\"url\\":\\"https://mister-hope.com\\"}]}"]]},"headers":[{"level":2,"title":"1 外部中断","slug":"_1-外部中断","link":"#_1-外部中断","children":[{"level":3,"title":"1.1 什么是中断","slug":"_1-1-什么是中断","link":"#_1-1-什么是中断","children":[]},{"level":3,"title":"1.2 外部中断介绍","slug":"_1-2-外部中断介绍","link":"#_1-2-外部中断介绍","children":[]},{"level":3,"title":"1.3 外部中断的作用和优势","slug":"_1-3-外部中断的作用和优势","link":"#_1-3-外部中断的作用和优势","children":[]},{"level":3,"title":"1.4 使用外部中断流程","slug":"_1-4-使用外部中断流程","link":"#_1-4-使用外部中断流程","children":[]}]},{"level":2,"title":"2. 定时器","slug":"_2-定时器","link":"#_2-定时器","children":[]}],"git":{"createdTime":1735489622000,"updatedTime":1737038545000,"contributors":[{"name":"graphwmz","email":"ouyanglingle@outlook.com","commits":5}]},"readingTime":{"minutes":2.11,"words":633},"filePathRelative":"posts/2024二期培训/1.md","localizedDate":"2024年12月29日","excerpt":"\\n<h2>1 外部中断</h2>\\n<h3>1.1 什么是中断</h3>\\n<ul>\\n<li>在单片机系统中，中断是一种机制。它允许单片机在执行正常程序的过程中，暂停当前的任务，转而去处理其它更为紧急或者有更高优先级的事件。当这个紧急事件处理完毕后，单片机又能够回到原来被中断的地方，继续执行之前的程序，就好像被打断的工作又重新开始一样。</li>\\n<li>例如，想象你正在房间里看书（这就相当于单片机在执行主程序），突然电话铃响了（这就是一个中断事件）。你放下书本去接电话（处理中断），接完电话后，你又能回到刚才看书的地方继续阅读（返回主程序）。</li>\\n</ul>\\n<h3>1.2 外部中断介绍</h3>","autoDesc":true}')}}]);